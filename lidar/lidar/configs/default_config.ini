[Test]
src_url = https://webtransfer.vancouver.ca/opendata/2018LiDAR/
dest_dir_path = ../tests/test_data/
output_map_file_path = ../tests/test_data/map.geojson
test_tiles = ["4810E_54560N"]

[Download]
src_url = https://webtransfer.vancouver.ca/opendata/2018LiDAR/
dest_dir_path = ../data/2018/
tiles = ["4800E_54550N", "4800E_54560N", "4800E_54570N",
	"4810E_54540N", "4810E_54550N", "4810E_54560N", "4810E_54570N", "4810E_54580N",
	"4820E_54530N", "4820E_54540N", "4820E_54550N", "4820E_54560N", "4820E_54570N", "4820E_54580N",
	"4830E_54580N", "4830E_54570N", "4830E_54560N", "4830E_54550N", "4830E_54540N"]

[Constants]
alpha_shape_multipolygon_type = MultiPolygon
alpha_shape_polygon_type = Polygon
pkl_file_path = points.pkl
output_map_file_path = ../tests/map.geojson
output_tile_file_path = ../tests/tile.geojson
plot_html_file_path = ../tests/test_data/plot.html
las_ext = .las
zip_ext = .zip
default_alpha_shape = 0.0
tile_max_size = 100000
east_offset = 4000
north_offset = 50000
tile_scale = 10000

[Parameters]
down_size = 100
min_points_for_downsize = 20000
eps = 300
min_sample = 10
min_size = 20
min_polygon_area = 1500
alphashape_reduction = 1000
max_polygon_area = 5000000000

[Configure]
debug = True

[ToolTips]
eps = <b> EPS parameter(float) </b> :The maximum distance between two samples for one to be considered as in the neighborhood of the other. This is not a maximum bound on the distances of points within a cluster. This is the most important DBSCAN parameter to choose appropriately for your data set and distance function.
min_sample = <b> min sample(int) </b> :The number of samples (or total weight)in a neighborhood for a point to be considered as a core point. This includes the point itself.
down_size = <b> down size(int) </b> :The numbder of decrement to apply on the original LiDAR data. For example, if the original has 1, 000 points, then with down size of 10, processing pipeline will only random sample 100 points
min_polygon_area = <b> minimun polygon area (cm^2) </b> : The smallest size of polygon for the alphashape algorithm to start considering optimize for. Any polygons that are bigger than this area will be optimized instead of using the defaul alpha=0, which is the convex hull of the clusters.
alphashape_reduction = <b> alphashape size reduction (float) </b>: The size to reduce large shape into before optimize for alphashape. The smaller the number, the faster the process, at the cost that the shape will be worse in terms of outter boundary and overall shape.
max_polygon_area = <b> maximun polygon area (cm^2) </b>:
test_output = <b> test data output </b> : show the processing time and clusters found of testing data tile. A map.geojson file is also created under tests/test_data
process_output = <b> processing pipeline output </b> : show the data pipeline output of the whole map.

